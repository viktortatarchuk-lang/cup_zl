from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

# –°—Ç–∞–Ω –º–∞—à–∏–Ω–∏ (FSM)
class OrderStates(StatesGroup):
    waiting_for_name = State()
    waiting_for_phone = State()

# –ö–Ω–æ–ø–∫–∞ –∫—É–ø–∏—Ç–∏ ‚Äî –∑–∞–ø–∏—Ç –ü–Ü–ë
@dp.message(F.text == "üõí –ö—É–ø–∏—Ç–∏")
async def buy_product(message: types.Message, state: FSMContext):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å, –±—É–¥—å –ª–∞—Å–∫–∞, –≤–∞—à–µ –ü–Ü–ë:")
    await state.set_state(OrderStates.waiting_for_name)

# –û–±—Ä–æ–±–∫–∞ –≤–≤–µ–¥–µ–Ω–Ω—è –ü–Ü–ë
@dp.message(OrderStates.waiting_for_name)
async def process_name(message: types.Message, state: FSMContext):
    full_name = message.text.strip()
    await state.update_data(full_name=full_name)

    # –ó–∞–ø–∏—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É
    kb = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üìû –ù–∞–¥—ñ—Å–ª–∞—Ç–∏ –Ω–æ–º–µ—Ä", request_contact=True)]],
        resize_keyboard=True,
        one_time_keyboard=True
    )
    await message.answer("–î—è–∫—É—î–º–æ! –¢–µ–ø–µ—Ä –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, —â–æ–± –ø–æ–¥—ñ–ª–∏—Ç–∏—Å—è —Å–≤–æ—ó–º –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É:", reply_markup=kb)
    await state.set_state(OrderStates.waiting_for_phone)

# –û–±—Ä–æ–±–∫–∞ –Ω–æ–º–µ—Ä–∞
@dp.message(F.contact, OrderStates.waiting_for_phone)
async def contact_handler(message: types.Message, state: FSMContext):
    phone = message.contact.phone_number
    data = await state.get_data()
    full_name = data.get("full_name")

    await message.answer(
        f"‚úÖ –î—è–∫—É—î–º–æ, {full_name}!\n"
        f"–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ {product_name} –ø—Ä–∏–π–Ω—è—Ç–µ.\n"
        f"–ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –∑–∞ –Ω–æ–º–µ—Ä–æ–º {phone}.",
        reply_markup=ReplyKeyboardRemove()
    )
    await state.clear()

