import logging
import re
import os
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from aiohttp import web
from dotenv import load_dotenv

# –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è .env
load_dotenv()
API_TOKEN = os.getenv("API_TOKEN")

# –í–∞—à webhook URL
WEBHOOK_HOST = 'https://cup-zl.onrender.com'  # –∑–∞–º—ñ–Ω–∏ –Ω–∞ —Å–≤—ñ–π URL
WEBHOOK_PATH = '/webhook'
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

logging.basicConfig(level=logging.INFO)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

# –¢–æ–≤–∞—Ä
product_name = "–§—É—Ç–±–æ–ª–∫–∞ '–î–æ–Ω—Ç –ø—É—à –∑–µ —Ö–æ—Ä—Å–µ—Å!'"
product_price = 500
product_description = "–ö—Ä—É—Ç–∞ —Ñ—É—Ç–±–æ–ª–∫–∞ –∑ —É–Ω—ñ–∫–∞–ª—å–Ω–∏–º –ø—Ä–∏–Ω—Ç–æ–º."
product_photo_url = "https://images.prom.ua/6058088044_w640_h640_6058088044.jpg"

@dp.message(Command(commands=["start"]))
async def cmd_start(message: types.Message):
    kb = ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üõí –ö—É–ø–∏—Ç–∏")]],
        resize_keyboard=True
    )
    await message.answer_photo(
        photo=product_photo_url,
        caption=(
            f"{product_name}\n\n{product_description}\n"
            f"–¶—ñ–Ω–∞: {product_price} –≥—Ä–Ω"
        ),
        reply_markup=kb
    )

@dp.message(F.text == "üõí –ö—É–ø–∏—Ç–∏")
async def buy_product(message: types.Message):
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É –¥–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥ +380501234567):")

@dp.message()
async def get_phone(message: types.Message):
    if re.match(r'^\+?\d{9,13}$', message.text.strip()):
        await message.answer(
            f"‚úÖ –î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ {product_name} –ø—Ä–∏–π–Ω—è—Ç–µ.\n"
            f"–ú–∏ –∑–≤'—è–∂–µ–º–æ—Å—è –∑ –≤–∞–º–∏ –∑–∞ –Ω–æ–º–µ—Ä–æ–º {message.text.strip()}."
        )
    else:
        if message.text.strip() != "üõí –ö—É–ø–∏—Ç–∏":
            await message.answer("–ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞. –°–ø—Ä–æ–±—É–π —â–µ —Ä–∞–∑, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥ +380501234567.")

async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)

async def on_shutdown(app):
    await bot.delete_webhook()

async def handle_webhook(request):
    update = await request.json()
    await dp.feed_update(bot, types.Update(**update))
    return web.Response()

def create_app():
    app = web.Application()
    app.router.add_post(WEBHOOK_PATH, handle_webhook)
    app.on_startup.append(on_startup)
    app.on_shutdown.append(on_shutdown)
    return app

if name == '__main__':
    web.run_app(create_app(), port=int(os.getenv("PORT", 8000)))